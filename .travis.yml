#
# eChronos Real-Time Operating System
# Copyright (C) 2015  National ICT Australia Limited (NICTA), ABN 62 102 206 173.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3, provided that these additional
# terms apply under section 7:
#
#   No right, title or interest in or to any trade mark, service mark, logo or
#   trade name of of National ICT Australia Limited, ABN 62 102 206 173
#   ("NICTA") or its licensors is granted. Modified versions of the Program
#   must be plainly marked as such, and must not be distributed using
#   "eChronos" as a trade mark or product name, or misrepresented as being the
#   original Program.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# @TAG(NICTA_AGPL)
#

# make gnu build utils available
language: c
# make Ubuntu trusty available, required for Python >= 3.3
sudo: required
# make Ubuntu trusty available, required for Python >= 3.3
dist: trusty
# cache GDB builds
cache:
  directories:
  - "${HOME}/local"
# build matrix across multiple Python version to parallelize builds with different Python versions
env:
  - PY_VER=3.3
  - PY_VER=3.4
  - PY_VER=3.5
  - PY_VER=3.6

# install and set up all third-party software necessary to run tests and builds
# also, fetch master and create a local branch for it because 'x.py test x' depends on it
install:
  - sh ./test_setup.sh
  - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
  - git fetch --depth=1 origin master
  - git branch --track master origin/master

# run tests and builds
script: sh ./test.sh -p ${PY_VER}

# deploy certain build outputs to an external service
deploy:
  # specifically deploy as a GitHub release
  provider: releases
  # authorize Travis CI to upload files to the echronos GitHub release page
  # note that this is a security risk
  # since the key is now public, it gives anyone in the world the authority to create GitHub releases in the echronos repository
  api_key:
    secure: kRdvz5OptKG7Lm6YKbUhq9CZldkjsk0PexDIqn+GpzTfLn7gXTRwwaS8lWOU042Gku5B3VZ/e5PX8TaEb8GCTWk7lpAkBhQCrhpqTebtpexJlnQBi37M/YbW2Wtyf44UnWWrVOqqqEa5I3OO4WOWOpeIIW8NtlMudm908cuV0l30ULXKmUIKxONeqp3CtoEI/JroyZH/bDvnpqOkTtjy9AHBmCeiabx0rOZ6HpYhOc5GCKSUlNqAThn2uoeZUDiTFKVFREAAgR9KUOu4j7fqJuFWmRWUuY3E4P1mBCWuANKKeTMCj1V3SNiij4B4Jqb3OxlQQXs8f/jYHD+ToKZGWtFB7s2DH72/wo1GHHTJVHvaHi7Sc0dL6bhIdKWvEZnN7lvteN2R4aEaNWpfQYTxFE9tYj7iyt/K9AxAuSw49vNObXwITTvkX0h782nf2T+Tkw5fqJzf5NvuMrctZ5kSqWjTHaTuyxsJyY7+H6u4GfceK75nco/Kks0d6b6rjT8ZFBhF2178R8xsZUd6vvYMmnl1fQ5KF3tTyoPti2VMxkpfqTHXmB8hzS1xA0dwdhl3UZs0RUEVGG0P2vzpQQyDCi4QCW8a3eLcRKYAcSd7wWxwS5H6EjqVh/9xGIgK0jw5GBgvTrooaSCFO6FV7TsN0BzJ67nSXrXOTXhPLgzGJcM=
  # do not clean up build outputs so that they can be deployed
  skip_cleanup: true
  # specifically enable glob patterns (or wildcards) for file name matching in the 'file' option
  file_glob: true
  # deploy all eChronos release archives that were built
  file: release/eChronos-*.tar.gz
  # restrict which Travis CI test and build runs result in a deployment / release
  on:
    # only deploy if sources are from the echronos repository
    repo: echronos/echronos
    # only deploy if this test/build was run against a git tag (as opposed to some/any branch)
    # this effectively forces the project to create a git tag in order to create a release
    tags: true
    # Only deploy if tests were run with Python 3.6.
    # This prevents the parallel builds in the matrix of the different Python versions from all trying to deploy concurrently, which can cause failures.
    # Limiting the deployment to a specific case in the build matrix (i.e., to a specific Python version) ensures that only one set of build outputs is deployed.
    # Any Python version is fine and 3.6 is simply the most recent one.
    condition: $PY_VER = 3.6
